// Size Calculator Logic
document.getElementById("calculate-btn").addEventListener("click", function () {
  const height = parseFloat(document.getElementById("height").value);
  const weight = parseFloat(document.getElementById("weight").value);
  const sizeResult = document.getElementById("size-result");
  const resultTable = document.getElementById("result-table");

  // Reset result text and hide table
  sizeResult.textContent = "";
  resultTable.style.display = "none";
  document
    .querySelectorAll("tr")
    .forEach((row) => (row.style.backgroundColor = ""));

  // Validation
  if (isNaN(height) || isNaN(weight) || height <= 0 || weight <= 0) {
    sizeResult.textContent = "Please enter valid height and weight values.";
    return;
  }

  if (height < 140 || height > 200 || weight < 40 || weight > 150) {
    sizeResult.textContent =
      "Please enter realistic values for height and weight.";
    return;
  }

  // Determine size based on height and weight ranges
  let size = "";
  let rowId = "";

  if (height >= 165 && height <= 170 && weight >= 50 && weight <= 70) {
    size = "S (Small)";
    rowId = "small-row";
  } else if (height >= 170 && height <= 175 && weight >= 70 && weight <= 80) {
    size = "M (Medium)";
    rowId = "medium-row";
  } else if (height >= 175 && height <= 180 && weight >= 80 && weight <= 100) {
    size = "L (Large)";
    rowId = "large-row";
  } else {
    size = "Sorry, size not available.";
  }

  // Display the size result
  sizeResult.textContent = `Based on your height and weight, your recommended size is: ${size}`;

  // Show the table and highlight the row
  if (rowId) {
    resultTable.style.display = "table";
    document.getElementById(rowId).style.backgroundColor = "cornflowerblue";
  }
});

// Cart System
let cart = [];

// Function to update the cart count in the navbar
function updateCartCount() {
  const cartCount = document.querySelector(".cart-count");
  cartCount.textContent = cart.length;
}

// Function to add an item to the cart
function addToCart(product) {
  const existingItem = cart.find((item) => item.title === product.title);
  if (existingItem) {
    existingItem.quantity += 1;
  } else {
    cart.push({ ...product, quantity: 1 });
  }
  updateCartCount();
  renderCartItems();
}

// Function to render cart items in the dropdown
function renderCartItems() {
  const cartItems = document.getElementById("cart-items");
  cartItems.innerHTML = "";

  if (cart.length === 0) {
    cartItems.innerHTML = '<li class="text-center">Your cart is empty.</li>';
    return;
  }

  cart.forEach((item) => {
    const cartItem = document.createElement("li");
    cartItem.classList.add("dropdown-item");
    cartItem.innerHTML = `
             <div class="d-flex justify-content-between align-items-center">
               <span>${item.title} (x${item.quantity})</span>
               <span>${item.price}</span>
             </div>
           `;
    cartItems.appendChild(cartItem);
  });
}

// Add event listeners to "Add to Cart" buttons
document.querySelectorAll(".cart-btn").forEach((button) => {
  button.addEventListener("click", () => {
    const product = {
      title: button.closest(".col-md-3").querySelector("h5").textContent,
      price: button.closest(".col-md-3").querySelector("span").textContent,
    };
    addToCart(product);
  });
});

// Initialize cart
updateCartCount();
renderCartItems();
